"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: function() { return /* binding */ authService; },\n/* harmony export */   authenticatedRequest: function() { return /* binding */ authenticatedRequest; }\n/* harmony export */ });\n/* harmony import */ var _mysql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mysql */ \"./src/lib/mysql.ts\");\n// Authentication Service\n// Handles login, registration, and token management\n\n// Token management\nconst TOKEN_KEY = \"forward_africa_token\";\nconst USER_KEY = \"forward_africa_user\";\nconst authService = {\n    // Store token and user data\n    setAuthData: (token, user)=>{\n        localStorage.setItem(TOKEN_KEY, token);\n        localStorage.setItem(USER_KEY, JSON.stringify(user));\n    },\n    // Get stored token\n    getToken: ()=>{\n        return localStorage.getItem(TOKEN_KEY);\n    },\n    // Get stored user data\n    getUser: ()=>{\n        const userData = localStorage.getItem(USER_KEY);\n        return userData ? JSON.parse(userData) : null;\n    },\n    // Clear auth data\n    clearAuthData: ()=>{\n        localStorage.removeItem(TOKEN_KEY);\n        localStorage.removeItem(USER_KEY);\n    },\n    // Check if user is authenticated\n    isAuthenticated: ()=>{\n        return !!authService.getToken();\n    },\n    // Check if user has specific role\n    hasRole: (role)=>{\n        const user = authService.getUser();\n        return (user === null || user === void 0 ? void 0 : user.role) === role;\n    },\n    // Check if user has admin privileges\n    isAdmin: ()=>{\n        const user = authService.getUser();\n        return (user === null || user === void 0 ? void 0 : user.role) === \"super_admin\";\n    },\n    // Login user\n    login: async (credentials)=>{\n        const response = await fetch(\"\".concat(_mysql__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"/auth/login\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(credentials)\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.error || \"Login failed\");\n        }\n        const data = await response.json();\n        authService.setAuthData(data.token, data.user);\n        return data;\n    },\n    // Register user\n    register: async (userData)=>{\n        const response = await fetch(\"\".concat(_mysql__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"/auth/register\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userData)\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.error || \"Registration failed\");\n        }\n        const data = await response.json();\n        authService.setAuthData(data.token, data.user);\n        return data;\n    },\n    // Logout user\n    logout: ()=>{\n        authService.clearAuthData();\n    },\n    // Get current user profile\n    getProfile: async ()=>{\n        const token = authService.getToken();\n        if (!token) {\n            throw new Error(\"No authentication token\");\n        }\n        const response = await fetch(\"\".concat(_mysql__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"/auth/me\"), {\n            headers: {\n                \"Authorization\": \"Bearer \".concat(token)\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch user profile\");\n        }\n        const user = await response.json();\n        // Update stored user data\n        authService.setAuthData(token, user);\n        return user;\n    },\n    // Update user profile\n    updateProfile: async (updates)=>{\n        const token = authService.getToken();\n        const user = authService.getUser();\n        if (!token || !user) {\n            throw new Error(\"No authentication token\");\n        }\n        console.log(\"Updating profile for user:\", user.id);\n        console.log(\"Update data:\", updates);\n        console.log(\"API URL:\", \"\".concat(_mysql__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"/users/\").concat(user.id));\n        const response = await fetch(\"\".concat(_mysql__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"/users/\").concat(user.id), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token)\n            },\n            body: JSON.stringify(updates)\n        });\n        console.log(\"Response status:\", response.status);\n        console.log(\"Response ok:\", response.ok);\n        if (!response.ok) {\n            try {\n                const errorData = await response.json();\n                console.error(\"Error response:\", errorData);\n                throw new Error(errorData.error || \"HTTP \".concat(response.status, \": Failed to update profile\"));\n            } catch (parseError) {\n                console.error(\"Failed to parse error response:\", parseError);\n                throw new Error(\"HTTP \".concat(response.status, \": Failed to update profile\"));\n            }\n        }\n        const updatedUser = await response.json();\n        console.log(\"Updated user data:\", updatedUser);\n        authService.setAuthData(token, updatedUser);\n        return updatedUser;\n    }\n};\n// API request helper with authentication\nconst authenticatedRequest = async function(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const token = authService.getToken();\n    if (!token) {\n        throw new Error(\"Authentication required\");\n    }\n    const response = await fetch(\"\".concat(_mysql__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL).concat(endpoint), {\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \".concat(token),\n            ...options.headers\n        }\n    });\n    if (response.status === 401) {\n        authService.logout();\n        throw new Error(\"Session expired. Please login again.\");\n    }\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || \"Request failed\");\n    }\n    return response.json();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/auth.ts\n"));

/***/ })

});