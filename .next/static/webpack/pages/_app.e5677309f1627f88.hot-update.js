"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/hooks/useDatabase.ts":
/*!**********************************!*\
  !*** ./src/hooks/useDatabase.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAchievements: function() { return /* binding */ useAchievements; },\n/* harmony export */   useAnalytics: function() { return /* binding */ useAnalytics; },\n/* harmony export */   useAuditLogs: function() { return /* binding */ useAuditLogs; },\n/* harmony export */   useCategories: function() { return /* binding */ useCategories; },\n/* harmony export */   useCertificates: function() { return /* binding */ useCertificates; },\n/* harmony export */   useCourses: function() { return /* binding */ useCourses; },\n/* harmony export */   useInstructors: function() { return /* binding */ useInstructors; },\n/* harmony export */   useUserProgress: function() { return /* binding */ useUserProgress; },\n/* harmony export */   useUsers: function() { return /* binding */ useUsers; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/api */ \"./src/lib/api.ts\");\n/* harmony import */ var _data_mockData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/mockData */ \"./src/data/mockData.ts\");\n// Custom hook for database operations\n// This hook provides easy access to database operations throughout the app\n\n\n\n// Custom hook for courses\nconst useCourses = ()=>{\n    const [courses, setCourses] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [featuredCourses, setFeaturedCourses] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchAllCourses = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.courseAPI.getAllCourses();\n            // Transform backend data to frontend format\n            const transformedCourses = data.map((course)=>({\n                    id: course.id,\n                    title: course.title,\n                    instructor: {\n                        id: course.instructor_id || \"unknown\",\n                        name: course.instructor_name || \"Unknown Instructor\",\n                        title: course.instructor_title || \"Instructor\",\n                        image: course.instructor_image || \"/placeholder-avatar.jpg\",\n                        bio: course.instructor_bio || \"Experienced instructor\",\n                        email: course.instructor_email || \"instructor@forwardafrica.com\",\n                        expertise: course.instructor_expertise ? JSON.parse(course.instructor_expertise) : [\n                            \"Education\"\n                        ],\n                        experience: course.instructor_experience || 5,\n                        createdAt: new Date(course.instructor_created_at || Date.now())\n                    },\n                    instructorId: course.instructor_id,\n                    category: course.category_name || course.category || \"General\",\n                    thumbnail: course.thumbnail || \"/placeholder-course.jpg\",\n                    banner: course.banner || \"/placeholder-course.jpg\",\n                    videoUrl: course.video_url,\n                    description: course.description || \"Course description coming soon.\",\n                    lessons: course.lessons || [],\n                    featured: course.featured || false,\n                    totalXP: course.total_xp || 1000,\n                    comingSoon: course.coming_soon || false,\n                    releaseDate: course.release_date\n                }));\n            setCourses(transformedCourses);\n        } catch (err) {\n            console.error(\"Failed to fetch courses from API, using mock data:\", err);\n            const mockCourses = (0,_data_mockData__WEBPACK_IMPORTED_MODULE_2__.getAllCourses)();\n            setCourses(mockCourses);\n            setError(\"Failed to load courses from server\");\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    const fetchFeaturedCourses = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.courseAPI.getFeaturedCourses();\n            // Transform backend data to frontend format\n            const transformedCourses = data.map((course)=>({\n                    id: course.id,\n                    title: course.title,\n                    instructor: {\n                        id: course.instructor_id || \"unknown\",\n                        name: course.instructor_name || \"Unknown Instructor\",\n                        title: course.instructor_title || \"Instructor\",\n                        image: course.instructor_image || \"/placeholder-avatar.jpg\",\n                        bio: course.instructor_bio || \"Experienced instructor\",\n                        email: course.instructor_email || \"instructor@forwardafrica.com\",\n                        expertise: course.instructor_expertise ? JSON.parse(course.instructor_expertise) : [\n                            \"Education\"\n                        ],\n                        experience: course.instructor_experience || 5,\n                        createdAt: new Date(course.instructor_created_at || Date.now())\n                    },\n                    instructorId: course.instructor_id,\n                    category: course.category_name || course.category || \"General\",\n                    thumbnail: course.thumbnail || \"/placeholder-course.jpg\",\n                    banner: course.banner || \"/placeholder-course.jpg\",\n                    videoUrl: course.video_url,\n                    description: course.description || \"Course description coming soon.\",\n                    lessons: course.lessons || [],\n                    featured: course.featured || false,\n                    totalXP: course.total_xp || 1000,\n                    comingSoon: course.coming_soon || false,\n                    releaseDate: course.release_date\n                }));\n            setFeaturedCourses(transformedCourses);\n        } catch (err) {\n            console.error(\"Failed to fetch featured courses from API, using mock data:\", err);\n            const mockFeaturedCourses = (0,_data_mockData__WEBPACK_IMPORTED_MODULE_2__.getFeaturedCourses)();\n            setFeaturedCourses(mockFeaturedCourses);\n        }\n    }, []);\n    return {\n        courses,\n        featuredCourses,\n        loading,\n        error,\n        fetchAllCourses,\n        fetchFeaturedCourses\n    };\n};\n// Custom hook for audit logs\nconst useAuditLogs = ()=>{\n    const [logs, setLogs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchAuditLogs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (filters)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.auditLogsAPI.getAuditLogs(filters);\n            setLogs(data);\n        } catch (err) {\n            console.error(\"Failed to fetch audit logs:\", err);\n            setError(\"Failed to load audit logs\");\n            setLogs([]);\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    const createAuditLog = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (auditData)=>{\n        try {\n            await _lib_api__WEBPACK_IMPORTED_MODULE_1__.auditLogsAPI.createAuditLog(auditData);\n            // Refresh logs after creating new one\n            await fetchAuditLogs();\n        } catch (err) {\n            console.error(\"Failed to create audit log:\", err);\n            throw err;\n        }\n    }, [\n        fetchAuditLogs\n    ]);\n    return {\n        logs,\n        loading,\n        error,\n        fetchAuditLogs,\n        createAuditLog\n    };\n};\n// Custom hook for categories\nconst useCategories = ()=>{\n    const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchAllCategories = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.categoryAPI.getAllCategories();\n            setCategories(data);\n        } catch (err) {\n            console.error(\"Failed to fetch categories:\", err);\n            setError(\"Failed to load categories\");\n            setCategories([]);\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    return {\n        categories,\n        loading,\n        error,\n        fetchAllCategories\n    };\n};\n// Custom hook for instructors\nconst useInstructors = ()=>{\n    const [instructors, setInstructors] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchAllInstructors = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.instructorAPI.getAllInstructors();\n            setInstructors(data);\n        } catch (err) {\n            console.error(\"Failed to fetch instructors:\", err);\n            setError(\"Failed to load instructors\");\n            setInstructors([]);\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    return {\n        instructors,\n        loading,\n        error,\n        fetchAllInstructors\n    };\n};\n// Hook for managing user progress\nconst useUserProgress = (userId)=>{\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchUserProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!userId) return;\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.progressAPI.getAllUserProgress(userId);\n            setProgress(data);\n        } catch (err) {\n            setError(\"Failed to fetch user progress\");\n            console.error(\"Error fetching user progress:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        userId\n    ]);\n    const updateProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (courseId, progressData)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            await _lib_api__WEBPACK_IMPORTED_MODULE_1__.progressAPI.updateProgress(userId, courseId, progressData);\n            await fetchUserProgress(); // Refresh data\n        } catch (err) {\n            setError(\"Failed to update progress\");\n            console.error(\"Error updating progress:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        userId,\n        fetchUserProgress\n    ]);\n    const createProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (progressData)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            await _lib_api__WEBPACK_IMPORTED_MODULE_1__.progressAPI.createProgress(progressData);\n            await fetchUserProgress(); // Refresh data\n        } catch (err) {\n            setError(\"Failed to create progress\");\n            console.error(\"Error creating progress:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        fetchUserProgress\n    ]);\n    return {\n        progress,\n        loading,\n        error,\n        fetchUserProgress,\n        updateProgress,\n        createProgress\n    };\n};\n// Hook for managing certificates\nconst useCertificates = (userId)=>{\n    const [certificates, setCertificates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchUserCertificates = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!userId) return;\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.certificateAPI.getUserCertificates(userId);\n            setCertificates(data);\n        } catch (err) {\n            setError(\"Failed to fetch certificates\");\n            console.error(\"Error fetching certificates:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        userId\n    ]);\n    const verifyCertificate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (verificationCode)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.certificateAPI.verifyCertificate(verificationCode);\n            return data;\n        } catch (err) {\n            setError(\"Failed to verify certificate\");\n            console.error(\"Error verifying certificate:\", err);\n            return null;\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    return {\n        certificates,\n        loading,\n        error,\n        fetchUserCertificates,\n        verifyCertificate\n    };\n};\n// Hook for managing achievements\nconst useAchievements = (userId)=>{\n    const [achievements, setAchievements] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchUserAchievements = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!userId) return;\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.achievementAPI.getUserAchievements(userId);\n            setAchievements(data);\n        } catch (err) {\n            setError(\"Failed to fetch achievements\");\n            console.error(\"Error fetching achievements:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        userId\n    ]);\n    return {\n        achievements,\n        loading,\n        error,\n        fetchUserAchievements\n    };\n};\n// Hook for managing users\nconst useUsers = ()=>{\n    const [users, setUsers] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]); // Changed to any[] as User type is removed\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchAllUsers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.userAPI.getUsers();\n            setUsers(data);\n        } catch (err) {\n            setError(\"Failed to fetch users\");\n            console.error(\"Error fetching users:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    const fetchUserById = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (userId)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.userAPI.getUser(userId);\n            return data;\n        } catch (err) {\n            setError(\"Failed to fetch user\");\n            console.error(\"Error fetching user:\", err);\n            return null;\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    const createUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (userData)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            const result = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.userAPI.createUser(userData);\n            await fetchAllUsers(); // Refresh data\n            return result;\n        } catch (err) {\n            setError(\"Failed to create user\");\n            console.error(\"Error creating user:\", err);\n            return null;\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        fetchAllUsers\n    ]);\n    const updateUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (userId, userData)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            await _lib_api__WEBPACK_IMPORTED_MODULE_1__.userAPI.updateUser(userId, userData);\n            await fetchAllUsers(); // Refresh data\n        } catch (err) {\n            setError(\"Failed to update user\");\n            console.error(\"Error updating user:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        fetchAllUsers\n    ]);\n    return {\n        users,\n        loading,\n        error,\n        fetchAllUsers,\n        fetchUserById,\n        createUser,\n        updateUser\n    };\n};\n// Hook for platform analytics\nconst useAnalytics = ()=>{\n    const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [detailedStats, setDetailedStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const fetchPlatformStats = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLoading(true);\n        setError(null);\n        try {\n            console.log(\"\\uD83D\\uDCCA Fetching platform stats...\");\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.analyticsAPI.getPlatformStats();\n            console.log(\"\\uD83D\\uDCCA Platform stats received:\", data);\n            setStats(data);\n        } catch (err) {\n            setError(\"Failed to fetch platform stats\");\n            console.error(\"Error fetching platform stats:\", err);\n            // Set fallback data\n            setStats({\n                totalUsers: 0,\n                totalCourses: 0,\n                totalLessons: 0,\n                totalCertificates: 0,\n                totalInstructors: 0,\n                completedCourses: 0,\n                activeStudents: 0,\n                totalXP: 0\n            });\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    const fetchDetailedAnalytics = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            console.log(\"\\uD83D\\uDCC8 Fetching detailed analytics...\");\n            const data = await _lib_api__WEBPACK_IMPORTED_MODULE_1__.analyticsAPI.getDetailedAnalytics();\n            console.log(\"\\uD83D\\uDCC8 Detailed analytics received:\", data);\n            setDetailedStats(data);\n        } catch (err) {\n            console.error(\"Failed to fetch detailed analytics:\", err);\n            setError(\"Failed to load detailed analytics\");\n        }\n    }, []);\n    return {\n        stats,\n        detailedStats,\n        loading,\n        error,\n        fetchPlatformStats,\n        fetchDetailedAnalytics\n    };\n}; // Example usage in components:\n /*\r\nimport { useCourses, useUserProgress } from '../hooks/useDatabase';\r\n\r\nconst HomePage = () => {\r\n  const { featuredCourses, loading, fetchFeaturedCourses } = useCourses();\r\n  const { progress, fetchUserProgress } = useUserProgress(userId);\r\n\r\n  useEffect(() => {\r\n    fetchFeaturedCourses();\r\n    fetchUserProgress();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      {featuredCourses.map(course => (\r\n        <CourseCard key={course.id} course={course} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useDatabase.ts\n"));

/***/ })

});